name: CI/CD

on:
  push:
    branches:
      - '**'  # Run on all branches
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main

jobs:
  # Tests
  site-cpn-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_database
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Installation de PHP 8.2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql
          coverage: none

      # Attendre que MySQL soit prêt
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready";
              exit 0;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done
          exit 1

      # Vérifie que la base de données existe
      - name: Verify database exists
        run: mysql -h 127.0.0.1 -u user -ppassword -e "SHOW DATABASES;"

    # Installation des dépendances avec Composer
      - name: Install Composer dependencies
        run: cd site_sae && composer install

      # Exécuter les migrations
      - name: Run migrations
        run: cd site_sae && php artisan migrate:fresh --seed

      # Exécuter les tests backend
      - name: Run tests
        run: cd site_sae && php artisan test
    env:
      APP_ENV: testing
      APP_DEBUG: true
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: test_database
      DB_USERNAME: user
      DB_PASSWORD: password

  # Deployment to Production (runs only on push to main and after tests succeed)
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [frontend-tests, backend-tests]  # Ensures tests must pass before deploying
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Build and deploy frontend
#        run: |
#          cd frontend
#          npm install
#          npm run build
#          scp -r ./dist user@your-server:/path/to/frontend
#      - name: Deploy backend
#        run: |
#          scp -r ./backend user@your-server:/path/to/backend
